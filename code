/*
        PROGRAMME AVEC LES 3 PREMIERS CAPTEURS ir4 ir3 ir2 et ir0 capteur à droite  :-) 
 */

#include <ArduinoRobot.h>
#include <Wire.h>
#include <SPI.h>

// DECLARATION DES VALEURS POUR LES CAPTEURS


//**************************************
//*               SETUP                *
//**************************************

void setup()
{
  Robot.begin();   
}

//**************************************
//*                LOOP                *
//**************************************
void loop(){

  int ir0;
  int ir1;
  int ir2;
  int ir3;
  int ir4;
  int vit;

  unsigned long time; // LE ROBOT AURA UN PROBLEME AU BOUT DE 4 294 967 295 SECONDES xD
  time = millis();

  int arriver;
  arriver = 0;

  while(time > 2000){

    //POTENTIOMETRE
    vit = Robot.knobRead() ; 
    vit = map(vit, 0, 1023, 50, 255); 

    // etat des capteurs
    Robot.updateIR();
    if (Robot.IRarray[0] < 400){ ir0 = 1; } else { ir0 = 0; }
    if (Robot.IRarray[1] < 400){ ir1 = 1; } else { ir1 = 0; }
    if (Robot.IRarray[2] < 400){ ir2 = 1; } else { ir2 = 0; }
    if (Robot.IRarray[3] < 400){ ir3 = 1; } else { ir3 = 0; }
    if (Robot.IRarray[4] < 400){ ir4 = 1; } else { ir4 = 0; }

    // PAS ENCORE ARRIVER
    if (arriver == 0){
      if (ir0 == 0){
        //CAS NORMAL
        if(ir4 == 1 && ir3 == 1 && ir2 == 1){
          avance_tout_droit(vit);
        }
         //AJUSTEMENT LIGNE
        else if(ir4 == 0 && ir3 == 1 && ir2 == 1){
            ajust_droite(vit);
        }
        else if(ir4 == 1 && ir3 == 1 && ir2 == 0){
            ajust_gauche(vit);
        }
        else if(ir4 == 0 && ir3 == 0 && ir2 == 1){
            ajust_droite2(vit);
        }
        else if(ir4 == 1 && ir3 == 0 && ir2 == 0){
            ajust_gauche2(vit);
        }
        
        //AUCUNE LIGNE
        else if(ir1 == 0 && ir2 == 0 && ir3 == 0 && ir4 == 0){
          tourne_gauche(vit);
        }
        else{
          arrete_toi();
        }
      }
      else{ //SI IR0 = 1

        if(ir0 == 1 && ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 1){

          unsigned long time1; // LE ROBOT AURA UN PROBLEME AU BOUT DE 4 294 967 295 SECONDES xD
          time1 = 0; 

          int stop1;
          stop1 = 0;

          unsigned long time0; // LE ROBOT AURA UN PROBLEME AU BOUT DE 4 294 967 295 SECONDES xD
          time0 = millis();

          while(stop1 == 0 && millis() > 5000){
            
            // etat des capteurs
              Robot.updateIR();
              if (Robot.IRarray[0] < 400){ ir0 = 1; } else { ir0 = 0; }
              if (Robot.IRarray[1] < 400){ ir1 = 1; } else { ir1 = 0; }
              if (Robot.IRarray[2] < 400){ ir2 = 1; } else { ir2 = 0; }
              if (Robot.IRarray[3] < 400){ ir3 = 1; } else { ir3 = 0; }
              if (Robot.IRarray[4] < 400){ ir4 = 1; } else { ir4 = 0; }
                    
            if(ir0 == 1 && ir1 == 1 && ir2 == 1 && ir3 == 1 && ir4 == 1){
              
              arrete_toi();
              avancer_arriver(vit);
              arrete_toi();

              time1 = millis() - time0;
              if(time1 > 2000){
                arriver42(); // par la suite pour sortir de la boucle dire time <1000 et stop = 2 creer une boucle arriver :)
                arriver = 1;
              }
            }
            else{
              if(ir0 == 0){
                while(ir0 == 0){
                  tourne_droite(vit*0.5);
                 // etat des capteurs
                  Robot.updateIR();
                  if (Robot.IRarray[0] < 400){ ir0 = 1; } else { ir0 = 0; }
                  if (Robot.IRarray[1] < 400){ ir1 = 1; } else { ir1 = 0; }
                  if (Robot.IRarray[2] < 400){ ir2 = 1; } else { ir2 = 0; }
                  if (Robot.IRarray[3] < 400){ ir3 = 1; } else { ir3 = 0; }
                  if (Robot.IRarray[4] < 400){ ir4 = 1; } else { ir4 = 0; }
                }
              }
              else {
                tourne_droite_ar(vit*0.6);
              }
               stop1 = 1;
            }
            
          }
        }

        else {
           // priorité si capteur 0 détecté tourne a droite 
           tourne_droite(vit);
         }
       }
    }
  }
}


//**************************************
//*           LES FONCTIONS            *
//**************************************

// AVANCE POUR TEST ARRIVER
void avancer_arriver(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(vit,vit); 
  delay(100); 
} 
// ARRIVER
void arriver42() 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(0,0);  
  delay(10000);
} 
// RECULE
void recule(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(-vit,-vit);  
} 
// ARRIVER
void arrete_toi() 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(0,0);
  delay(100);  
} 
// AJUSTEMENT GAUCHE
void ajust_gauche(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite((vit*0.8),vit);  
} 
// AJUSTEMENT GAUCHE
void ajust_gauche2(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite((vit*0.5),vit);  
} 
// AJUSTEMENT DROITE
void ajust_droite(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(vit,(vit*0.8));  
} 
// AJUSTEMENT DROITE
void ajust_droite2(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(vit,(vit*0.5));  
} 
// TOURNE LENTEMENT SUR LA GAUCHE
void recup_gauche(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(80,150);  
} 
// AVANCE
void avance_tout_droit(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(vit,vit); 
} 
// TOURNER A GAUCHE
void tourne_gauche(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(-vit,vit); 
}
// TOURNER A DROITE
void tourne_droite(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(vit,-vit); 
}
// TOURNER A DROITE
void tourne_droite_ar(int vit) 
{ 
  Robot.motorsStop();
  Robot.motorsWrite(vit,-vit); 
  delay(350);
}
